public-f net.minecraft.data.recipes.RecipeProvider getName()Ljava/lang/String; # getName

public net.minecraft.world.level.block.entity.BeehiveBlockEntity savedFlowerPos # savedFlowerPos
public net.minecraft.world.level.block.entity.BeehiveBlockEntity stored # stored
public net.minecraft.world.level.block.entity.BeehiveBlockEntity IGNORED_BEE_TAGS # IGNORED_BEE_TAGS
public net.minecraft.world.level.block.entity.BeehiveBlockEntity hasSavedFlowerPos()Z # hasSavedFlowerPos
public net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeData
public net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeData <init>(Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$Occupant;)V # <init>
public net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeData occupant # occupant
public net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeData ticksInHive # ticksInHive
public net.minecraft.world.level.block.entity.BeehiveBlockEntity releaseAllOccupants(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; # releaseAllOccupants

public net.minecraft.world.entity.animal.Bee beePollinateGoal # beePollinateGoal
public net.minecraft.world.entity.animal.Bee goToHiveGoal # goToHiveGoal
public net.minecraft.world.entity.animal.Bee goToKnownFlowerGoal # goToKnownFlowerGoal
public net.minecraft.world.entity.animal.Bee savedFlowerPos # savedFlowerPos
public net.minecraft.world.entity.animal.Bee hivePos # hivePos
public net.minecraft.world.entity.animal.Bee remainingCooldownBeforeLocatingNewHive # remainingCooldownBeforeLocatingNewHive
public net.minecraft.world.entity.animal.Bee remainingCooldownBeforeLocatingNewFlower # remainingCooldownBeforeLocatingNewFlower
public net.minecraft.world.entity.animal.Bee stayOutOfHiveCountdown # stayOutOfHiveCountdown
public net.minecraft.world.entity.animal.Bee doesHiveHaveSpace(Lnet/minecraft/core/BlockPos;)Z # doesHiveHaveSpace
public net.minecraft.world.entity.animal.Bee setHasNectar(Z)V # setHasNectar
public net.minecraft.world.entity.animal.Bee isFlowerValid(Lnet/minecraft/core/BlockPos;)Z # isFlowerValid
public net.minecraft.world.entity.animal.Bee wantsToEnterHive()Z # wantsToEnterHive
public net.minecraft.world.entity.animal.Bee setHasStung(Z)V # setHasStung
public net.minecraft.world.entity.animal.Bee isTiredOfLookingForNectar()Z # isTiredOfLookingForNectar
public net.minecraft.world.entity.animal.Bee isHiveNearFire()Z # isHiveNearFire
public net.minecraft.world.entity.animal.Bee getFlag(I)Z # getFlag
public net.minecraft.world.entity.animal.Bee setFlag(IZ)V # setFlag
public net.minecraft.world.entity.animal.Bee closerThan(Lnet/minecraft/core/BlockPos;I)Z # closerThan
public net.minecraft.world.entity.animal.Bee spawnFluidParticle(Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V # spawnFluidParticle
public net.minecraft.world.entity.animal.Bee$BaseBeeGoal
public net.minecraft.world.entity.animal.Bee$BaseBeeGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeEnterHiveGoal
public net.minecraft.world.entity.animal.Bee$BeeEnterHiveGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeePollinateGoal
public net.minecraft.world.entity.animal.Bee$BeePollinateGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeePollinateGoal isPollinating()Z # isPollinating
public net.minecraft.world.entity.animal.Bee$BeePollinateGoal hasPollinatedLongEnough()Z # hasPollinatedLongEnough
public net.minecraft.world.entity.animal.Bee$BeePollinateGoal findNearbyFlower()Ljava/util/Optional; # findNearbyFlower
public net.minecraft.world.entity.animal.Bee$BeeLocateHiveGoal
public net.minecraft.world.entity.animal.Bee$BeeLocateHiveGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeWanderGoal
public net.minecraft.world.entity.animal.Bee$BeeWanderGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeGrowCropGoal
public net.minecraft.world.entity.animal.Bee$BeeGrowCropGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeGoToKnownFlowerGoal
public net.minecraft.world.entity.animal.Bee$BeeGoToKnownFlowerGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeHurtByOtherGoal
public net.minecraft.world.entity.animal.Bee$BeeHurtByOtherGoal <init>(Lnet/minecraft/world/entity/animal/Bee;Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeBecomeAngryTargetGoal
public net.minecraft.world.entity.animal.Bee$BeeBecomeAngryTargetGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeGoToHiveGoal
public net.minecraft.world.entity.animal.Bee$BeeGoToHiveGoal <init>(Lnet/minecraft/world/entity/animal/Bee;)V # <init>
public net.minecraft.world.entity.animal.Bee$BeeGoToHiveGoal blacklistedTargets # blacklistedTargets
public net.minecraft.world.entity.animal.Bee$BeeGoToHiveGoal clearBlacklist()V # clearBlacklist
public net.minecraft.world.entity.animal.Bee$BeeGoToHiveGoal isTargetBlacklisted(Lnet/minecraft/core/BlockPos;)Z # isTargetBlacklisted
public net.minecraft.world.entity.animal.Bee$BeeGoToHiveGoal blacklistTarget(Lnet/minecraft/core/BlockPos;)V # blacklistTarget

public net.minecraft.client.particle.DripParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V # DripParticle
public net.minecraft.client.particle.LavaParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDD)V # LavaParticle

public net.minecraft.world.level.block.AttachedStemBlock fruit # fruit
public net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType <init>(Lcom/mojang/serialization/MapCodec;)V # <init>
public-f net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration decorators # decorators
public net.minecraft.world.level.levelgen.feature.TreeFeature doPlace(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z # doPlace
public net.minecraft.world.level.levelgen.feature.TreeFeature updateLeaves(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; # updateLeaves