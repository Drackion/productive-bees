plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id "org.sonarqube" version "3.1.1"
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args '--mod', 'productivebees', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
    flatDir {
        dir 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    implementation fg.deobf("curse.maven:jei-238222:4609866")
    implementation fg.deobf("curse.maven:jade-324717:4654448")
    implementation fg.deobf("curse.maven:the-one-probe-245211:4579432")
    implementation fg.deobf("curse.maven:corail-woodcutter-331983:4573934")
//    implementation fg.deobf("curse.maven:croptopia-415438:4636036")
//    implementation fg.deobf("curse.maven:farmers-delight-398521:4679319")
//    implementation fg.deobf("curse.maven:caupona-656147:4727564")
    implementation fg.deobf("curse.maven:pams-harvestcraft-2-trees-365460:4625518")
    implementation fg.deobf("curse.maven:pams-harvestcraft-2-crops-361385:4687624")

    implementation fg.deobf("curse.maven:ender-io-64578:4662609")
//    implementation fg.deobf("curse.maven:trophymanager-510170:4165097")
//    implementation fg.deobf("curse.maven:jumpy-boats-542110:4145484")
//    implementation fg.deobf("curse.maven:productivebees-579545:4176053")
//    implementation fg.deobf("curse.maven:alltheores-405593:3811648")
//    implementation fg.deobf("curse.maven:allthemodium-364466:3570257")
//    implementation fg.deobf("curse.maven:flywheel-486392:3737402")
//    implementation fg.deobf("curse.maven:create-328085:3737418")
//    implementation fg.deobf("curse.maven:cucumber-272335:4055932")
//    implementation fg.deobf("curse.maven:mystical-agriculture-246640:4064772")
//    implementation fg.deobf("curse.maven:croptopia-fabric-415438:3707657")
//    implementation fg.deobf("curse.maven:pams-harvestcraft-2-food-core-372534:3740562")
//    implementation fg.deobf("curse.maven:pams-harvestcraft-2-food-extended-402231:3740472")
//    implementation fg.deobf("curse.maven:spirit-495509:4085262")
//    implementation fg.deobf("curse.maven:cyclops-core-232758:3929867")
//    implementation fg.deobf("curse.maven:evilcraft-74610:4077777")
//    implementation fg.deobf("curse.maven:datapack-anvil-432817:4017178")
//    implementation fg.deobf("curse.maven:elemental-craft-395158:4057718")
//    implementation fg.deobf("curse.maven:geckolib-388172:4096661")
//    implementation fg.deobf("curse.maven:curios-309927:3924518")
//    implementation fg.deobf("curse.maven:modonomicon-538392:4100591")
//    implementation fg.deobf("curse.maven:occultism-361026:4100588")
//    implementation fg.deobf("curse.maven:framedblocks-441647:4094414")
//    implementation fg.deobf("curse.maven:item-filters-forge-309674:3596362")
//    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:3596307")
//    implementation fg.deobf("curse.maven:ftb-library-forge-404465:3598890")
//    implementation fg.deobf("curse.maven:ftb-quests-forge-289412:3596442")
//    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:3601595")
//    implementation fg.deobf("curse.maven:mekanism-268560:3810540")
//    implementation fg.deobf("curse.maven:ftb-industrial-contraptions-forge-539097:3807215")
//    implementation fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:3815728")
//    implementation fg.deobf("curse.maven:cofh-core-69162:3803484")
//    implementation fg.deobf("curse.maven:thermal-foundation-222880:3803495")
//    implementation fg.deobf("curse.maven:thermal-expansion-69163:3803489")
//    implementation fg.deobf("curse.maven:thermal-integration-626708:3803496")
//    implementation fg.deobf("curse.maven:curios-309927:4493912")
//    implementation fg.deobf("curse.maven:botania-225643:4415871")
//    implementation fg.deobf("curse.maven:cloth-config-348521:3972423")
//    implementation fg.deobf("curse.maven:architectury-api-419699:4521273")
//    implementation fg.deobf("curse.maven:powah-rearchitected-633483:4525233")
//    implementation fg.deobf("curse.maven:mcjtylib-233105:4501791")
//    implementation fg.deobf("curse.maven:rftools-base-326041:4415117")
//    implementation fg.deobf("curse.maven:mantle-74924:3784500")
//    implementation fg.deobf("curse.maven:tinkers-construct-74072:3784732")
//    implementation fg.deobf("curse.maven:applied-energistics-2-223794:4008855")
//    implementation fg.deobf("curse.maven:terrablender-563928:3822142")
//    implementation fg.deobf("curse.maven:oh-the-biomes-youll-go-247560:3826003")
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def replaceProperties = [
        minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version: forge_version, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range,
        mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
        mod_authors: mod_authors, mod_description: mod_description
]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "JDK Digital",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "JDK Digital",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "JDKDigital_productive-bees"
        property "sonar.organization", "jdkdigital"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
